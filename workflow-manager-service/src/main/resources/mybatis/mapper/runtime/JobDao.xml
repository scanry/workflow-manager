<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sixliu.workflow.runtime.repository.dao.JobDao">

	<resultMap id="EntityResult" type="com.sixliu.workflow.runtime.repository.entity.Job">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="model_id" property="modelId" jdbcType="VARCHAR" />
		<result column="current_task_id" property="currentTaskId" jdbcType="VARCHAR" />
		<result column="current_phase" property="currentPhase" jdbcType="VARCHAR" />
		<result column="lock_url" property="lockUrl" jdbcType="VARCHAR" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<parameterMap id="EntityParameter" type="com.sixliu.workflow.runtime.repository.entity.Job" />

	<!-- 表名 -->
	<sql id="table_name">job</sql>

	<!-- 查询通用列 -->
	<sql id="select_common_column">
		select
		`id`,
		`name`,
		model_id,
		`status`,
		current_task_id,
		current_phase,
		lock_url,
		`version`,
		update_user_id,
		update_date,
		create_user_id,
		create_date
	</sql>

	<select id="get" resultMap="EntityResult">
		<include refid="select_common_column" />
		from
		<include refid="table_name" />
		where 1=1
		and `id` =#{id}
	</select>

	<insert id="insert" parameterMap="EntityParameter">
		<selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
			select uuid()
		</selectKey>
		insert into
		<include refid="select_common_column" />
		(`id`,
		`name`,
		model_id,
		`status`,
		current_task_id,
		current_phase,
		update_user_id,
		create_user_id
		)
		values(#{id},
		#{name},
		#{modelId},
		#{status},
		#{currentTaskId},
		#{currentPhase},
		#{updateUserId},
		#{createUserId}
		)
	</insert>

	<select id="listLockJobs" resultMap="EntityResult">
		<include refid="select_common_column" />
		from
		<include refid="table_name" />
		where `lock_url` is not null
	</select>

	<update id="tryLock">
		update 
		<include refid="table_name" />
		set lock_url=#{lockUrl},version=#{version}+1
		where `id`=#{id}
		and
		`version`=#{version}
	</update>

	<update id="unlock">
		update 
		<include refid="table_name" />
		set lock_url=null,version=#{version}+1
		where `id`=#{id}
		and
		`version`=#{version}
	</update>

	<delete id="delete">
		delete from
		<include refid="table_name" />
		where `id`=#{id}
	</delete>
</mapper>